version: 2.1

orbs:
  aws-eks: openbean/aws-eks@2.0.0
  aws-ecr: circleci/aws-ecr@8.2.1
  kubernetes: circleci/kubernetes@1.3

jobs:
  run-lint:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - run:
          name: run lint
          command: |
            . venv/bin/activate 
            make lint 

  build-docker-image:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Build docker container & Upload to Dockerhub
          command: |
            export IMAGE_NAME=capstone-project
            docker build --tag=$DOCKER_USERNAME/$IMAGE_NAME .
            docker image ls
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
            docker push $DOCKER_USERNAME/$IMAGE_NAME

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster

workflows:
  default:
    jobs:
      - run-lint
      - build-docker-image
      - aws-ecr/build-and-push-image:
          name: build-and-push-image-ecr
          region: AWS_DEFAULT_REGION
          repo: capstone-project
          dockerfile: ~/project/Dockerfile
          path: ~/project/
          tag: ${CIRCLE_SHA1}
      - aws-eks/create-cluster:
          cluster-name: capstone-project-deployment-${CIRCLE_WORKFLOW_ID:0:7}
          aws-region: $AWS_DEFAULT_REGION
          requires:
            - build-and-push-image-ecr
      - test-cluster:
          cluster-name: capstone-project-deployment-${CIRCLE_WORKFLOW_ID:0:7}
          aws-region: $AWS_DEFAULT_REGION
          docker-image-name: "${AWS_ECR_URL}/capstone-project:${CIRCLE_SHA1}"
          version-info: "${CIRCLE_SHA1}"
          requires:
            - aws-eks/create-cluster
